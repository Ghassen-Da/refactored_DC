name: ci-cd

on: [push, pull_request]

jobs:
  ci:
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Check-out repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    # - name: Lint with ruff
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     ruff --format=github --select=E9,F63,F7,F82 --target-version=py39 .
    #     # default set of ruff rules with GitHub Annotations
    #     ruff --format=github --target-version=py39 .


    - name: Run tests and collect coverage 
      run: |
        pip install pytest-cov
        pytest --cov --cov-report=xml

    - name: Upload coverage reports to Codecov with GitHub Action
      uses: codecov/codecov-action@v3

  cd:
    # Only run this job if the "ci" job passes
    needs: ci
    # Only run this job if new work is pushed to the "main" branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
     
    # Set up operating system
    runs-on: ubuntu-latest

    # Define job steps
    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Check-out repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Install poetry
      uses: snok/install-poetry@v1

    - name: Install package
      run: poetry install

    - name: Install semantic-release
      run: poetry add python-semantic-release    

    - name: Use Python Semantic Release to prepare release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          poetry run semantic-release publish